@model DataObjects.MonsterVM

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Edit Monster</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.MonsterID)


        <div class="form-group">
            @Html.LabelFor(model => model.MonsterName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MonsterName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MonsterName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MonsterType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MonsterType, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MonsterType, "", new { @class = "text-danger" })
            </div>
        </div>

        @foreach (var weakness in Model.Weaknesses)
        {
            <div class="form-group">
                <label class="control-label col-md-2">@weakness.Name</label>
                <div class="col-md-10">
                    <input type="number" min="0" max="5" value="@weakness.Effectiveness" class="form-control input-validation-error" data-val="true"
                           data-val-required="Please enter the @weakness.Name effectiveness." id="@weakness.Name" name="@weakness.Name" value aria-describedby="@weakness.Name-error" />
                    <span class="text-danger field-validation-error" data-valmsg-for="@weakness.Name" data-valmsg-replace="true">
                        <span id="@weakness.Name-error"></span>
                    </span>
                </div>
            </div>
        }

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index", new object { }, new { @class = "btn btn-primary" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}